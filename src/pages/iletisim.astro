---
// src/pages/iletisim.astro
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';

// ==========================================
// BASE URL VE CURRENT URL
// ==========================================
const baseUrl = 'https://kapi-ureticileri.vercel.app';
const currentUrl = `${baseUrl}${Astro.url.pathname}`;

// ==========================================
// ƒ∞LETƒ∞≈ûƒ∞M Bƒ∞LGƒ∞LERƒ∞ (Tek Kaynak)
// ==========================================
const contactInfo = {
  // Telefon numaralarƒ±
  phone: {
    display: '+90 544 169 00 38',
    schema: '+90-544-169-0038',
    href: 'tel:+905441690038',
    whatsapp: '905441690038'
  },

  // Email adresleri
  email: {
    sales: 'export@cihanpandoor.com',
    general: 'exportcihanpandoor@gmail.com',
    support: 'info@cihanpandoor.com'
  },

  // Web adresi
  website: 'https://www.cihanpandoor.com',

  // Adres bilgileri
  address: {
    street: 'Organize Sanayi B√∂lgesi 29. Sokak No:28',
    city: 'Kayseri',
    postalCode: '38070',
    country: 'TR',
    countryName: 'Turkey',
    full: 'Organize Sanayi B√∂lgesi 29. Sokak No:28, Kayseri, Turkey'
  },

  // √áalƒ±≈üma saatleri
  workingHours: {
    weekday: 'Pazartesi - Cuma: 08:00 - 17:00',
    saturday: 'Cumartesi: 09:00 - 15:00',
    sunday: 'Pazar: Kapalƒ±',
    full: 'Pazartesi - Cuma: 08:00 - 17:00\nCumartesi: 09:00 - 15:00\nPazar: Kapalƒ±'
  },

  // Koordinatlar
  coordinates: {
    latitude: 38.7312,
    longitude: 35.4787
  }
};

// ==========================================
// SOSYAL MEDYA Lƒ∞NKLERƒ∞
// ==========================================
const socialLinks = [
  {
    name: 'WhatsApp',
    icon: 'üì±',
    href: `https://wa.me/${contactInfo.phone.whatsapp}?text=Merhaba, kapƒ± modelleri hakkƒ±nda bilgi almak istiyorum.`,
    color: 'bg-emerald-500',
    ariaLabel: 'WhatsApp ile ileti≈üime ge√ß'
  },
  {
    name: 'Instagram',
    icon: 'üì∑',
    href: 'https://www.instagram.com/cihanpandoor',
    color: 'bg-pink-500',
    ariaLabel: 'Instagram profilimizi ziyaret edin'
  },
  {
    name: 'LinkedIn',
    icon: 'üíº',
    href: 'https://www.linkedin.com/company/cihanpandoor',
    color: 'bg-blue-600',
    ariaLabel: 'LinkedIn sayfamƒ±zƒ± ziyaret edin'
  }
];

// ==========================================
// BREADCRUMB
// ==========================================
const breadcrumbItems = [
  { name: "Ana Sayfa", href: "/" },
  { name: "ƒ∞leti≈üim" }
];

// ==========================================
// FAQ (Geli≈ütirilmi≈ü)
// ==========================================
const faqs = [
  {
    question: 'Hangi illere teslimat yapƒ±yorsunuz?',
    answer: 'T√ºrkiye geneline teslimat yapƒ±yoruz. ƒ∞stanbul, Ankara, ƒ∞zmir, Bursa, Antalya dahil t√ºm illere hƒ±zlƒ± kargo ile g√∂nderim saƒülƒ±yoruz. B√ºy√ºk projeler i√ßin √∂zel nakliye se√ßenekleri ve uluslararasƒ± teslimat imkanlarƒ±mƒ±z da mevcuttur. Teslimat s√ºreleri b√∂lgeye g√∂re 3-7 i≈ü g√ºn√º arasƒ±nda deƒüi≈ümektedir.'
  },
  {
    question: 'Montaj hizmeti veriyor musunuz?',
    answer: 'Evet, t√ºm T√ºrkiye genelinde profesyonel montaj hizmeti sunuyoruz. Uzman montaj ekibimiz kapƒ± montajƒ±nƒ± bir g√ºnde tamamlar. Montaj hizmeti fiyatlarƒ± b√∂lgeye ve kapƒ± sayƒ±sƒ±na g√∂re deƒüi≈ükenlik g√∂stermektedir. Detaylƒ± bilgi i√ßin l√ºtfen bizimle ileti≈üime ge√ßin.'
  },
  {
    question: 'Garanti s√ºreniz ne kadar?',
    answer: 'T√ºm PVC, Laminoks ve Elitpan kapƒ± modellerimiz i√ßin 5 yƒ±l √ºretici garantisi veriyoruz. Garanti kapsamƒ±na malzeme ve i≈ü√ßilik hatalarƒ±, renk solmasƒ±, y√ºzey bozulmalarƒ± dahildir. Garanti s√ºresi boyunca bakƒ±m ve onarƒ±m hizmetleri √ºcretsizdir. Yanlƒ±≈ü kullanƒ±m ve montajdan kaynaklanan hasarlar garanti kapsamƒ± dƒ±≈üƒ±ndadƒ±r.'
  },
  {
    question: 'Toptan satƒ±≈ü yapƒ±yor musunuz?',
    answer: 'Evet, in≈üaat firmalarƒ±, m√ºteahhitler, yapƒ± marketleri ve bayiler i√ßin √∂zel toptan fiyatlarƒ±mƒ±z bulunmaktadƒ±r. Minimum 50 adet kapƒ± sipari≈ülerinde %15-25 arasƒ± indirim uyguluyoruz. Proje bazlƒ± teklifler i√ßin l√ºtfen satƒ±≈ü ekibimizle g√∂r√º≈ü√ºn. Bayilik ba≈üvurularƒ± i√ßin detaylƒ± bilgi alabilirsiniz.'
  },
  {
    question: '√ñdeme se√ßenekleri nelerdir?',
    answer: 'Kredi kartƒ±, banka havalesi ve kapƒ±da √∂deme (havale) se√ßeneklerimiz mevcuttur. Toptan sipari≈ülerde %50 pe≈üin, %50 teslimatta √∂deme veya 30-60-90 g√ºn vadeli √∂deme planlarƒ± sunuyoruz. Kurumsal m√º≈üterilerimiz i√ßin √∂zel √∂deme ko≈üullarƒ± olu≈üturuyoruz.'
  },
  {
    question: '√ñzel √∂l√ß√ºlerde kapƒ± √ºretimi yapƒ±yor musunuz?',
    answer: 'Evet, standart √∂l√ß√ºlerin (70x200cm, 80x200cm, 90x200cm) dƒ±≈üƒ±nda √∂zel √∂l√ß√ºlerde kapƒ± √ºretimi yapƒ±yoruz. Maksimum geni≈ülik 120cm, maksimum y√ºkseklik 250cm olabilir. √ñzel √∂l√ß√º kapƒ±lar i√ßin √ºretim s√ºresi 10-15 i≈ü g√ºn√ºd√ºr. Detaylƒ± √∂l√ß√ºler i√ßin teknik ekibimizle ileti≈üime ge√ßebilirsiniz.'
  }
];

// ==========================================
// SCHEMA MARKUPS
// ==========================================

// 1. CONTACT PAGE SCHEMA
const contactPageSchema = {
  "@context": "https://schema.org",
  "@type": "ContactPage",
  "name": "ƒ∞leti≈üim - CihanPan Door",
  "description": "CihanPan Door ile ileti≈üime ge√ßin. PVC, Laminoks, Elitpan kapƒ± modelleri i√ßin fiyat teklifi alƒ±n. T√ºrkiye geneline teslimat ve montaj hizmeti.",
  "url": currentUrl,
  "inLanguage": "tr-TR",
  "mainEntity": {
    "@type": "Organization",
    "@id": `${baseUrl}/#organization`,
    "name": "CihanPan Door",
    "legalName": "CihanPan Kapƒ± Sanayi ve Ticaret Ltd. ≈ûti.",
    "url": baseUrl,
    "logo": `${baseUrl}/assets/images/logo/header_logo1.webp`,
    "image": `${baseUrl}/assets/images/logo/header_logo1.webp`,
    "description": "Kayseri'den kaliteli i√ß oda kapƒ±sƒ± √ºreticisi - B2B toptan satƒ±≈ü",

    "contactPoint": [
      {
        "@type": "ContactPoint",
        "telephone": contactInfo.phone.schema,
        "contactType": "Sales",
        "email": contactInfo.email.sales,
        "areaServed": ["TR", "EU", "ME"],
        "availableLanguage": ["Turkish", "English", "German", "Arabic"],
        "contactOption": "TollFree",
        "hoursAvailable": [
          {
            "@type": "OpeningHoursSpecification",
            "dayOfWeek": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"],
            "opens": "08:00",
            "closes": "17:00"
          },
          {
            "@type": "OpeningHoursSpecification",
            "dayOfWeek": "Saturday",
            "opens": "09:00",
            "closes": "15:00"
          }
        ]
      },
      {
        "@type": "ContactPoint",
        "telephone": contactInfo.phone.schema,
        "contactType": "Customer Service",
        "email": contactInfo.email.general,
        "areaServed": "TR",
        "availableLanguage": "Turkish"
      }
    ],

    "address": {
      "@type": "PostalAddress",
      "streetAddress": contactInfo.address.street,
      "addressLocality": contactInfo.address.city,
      "postalCode": contactInfo.address.postalCode,
      "addressCountry": contactInfo.address.country,
      "addressRegion": contactInfo.address.city
    },

    "geo": {
      "@type": "GeoCoordinates",
      "latitude": contactInfo.coordinates.latitude,
      "longitude": contactInfo.coordinates.longitude
    },

    "areaServed": [
      {
        "@type": "Country",
        "name": "Turkey"
      },
      {
        "@type": "GeoCircle",
        "geoMidpoint": {
          "@type": "GeoCoordinates",
          "latitude": contactInfo.coordinates.latitude,
          "longitude": contactInfo.coordinates.longitude
        },
        "geoRadius": "2000000"
      }
    ],

    "sameAs": [
      "https://www.instagram.com/cihanpandoor",
      "https://www.linkedin.com/company/cihanpandoor",
      contactInfo.website
    ]
  }
};

// 2. FAQ SCHEMA
const faqSchema = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": faqs.map(faq => ({
    "@type": "Question",
    "name": faq.question,
    "acceptedAnswer": {
      "@type": "Answer",
      "text": faq.answer
    }
  }))
};

// 3. BREADCRUMB SCHEMA
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": breadcrumbItems.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.name,
    "item": item.href ? `${baseUrl}${item.href}` : currentUrl
  }))
};

// 4. LOCAL BUSINESS SCHEMA (Opsiyonel - ƒ∞sterseniz ekleyin)
const localBusinessSchema = {
  "@context": "https://schema.org",
  "@type": "LocalBusiness",
  "name": "CihanPan Door",
  "image": `${baseUrl}/assets/images/logo/header_logo1.webp`,
  "@id": `${baseUrl}/#localbusiness`,
  "url": baseUrl,
  "telephone": contactInfo.phone.schema,
  "email": contactInfo.email.sales,
  "priceRange": "$$",
  "address": {
    "@type": "PostalAddress",
    "streetAddress": contactInfo.address.street,
    "addressLocality": contactInfo.address.city,
    "postalCode": contactInfo.address.postalCode,
    "addressCountry": contactInfo.address.country
  },
  "geo": {
    "@type": "GeoCoordinates",
    "latitude": contactInfo.coordinates.latitude,
    "longitude": contactInfo.coordinates.longitude
  },
  "openingHoursSpecification": [
    {
      "@type": "OpeningHoursSpecification",
      "dayOfWeek": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"],
      "opens": "08:00",
      "closes": "17:00"
    },
    {
      "@type": "OpeningHoursSpecification",
      "dayOfWeek": "Saturday",
      "opens": "09:00",
      "closes": "15:00"
    }
  ],
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": "4.8",
    "reviewCount": "152",
    "bestRating": "5",
    "worstRating": "1"
  }
};

// Web3Forms Key
const publicWeb3formsKey = import.meta.env.PUBLIC_WEB3FORMS_KEY;

if (!publicWeb3formsKey) {
  console.error('‚ùå PUBLIC_WEB3FORMS_KEY environment variable is not set');
}
---

<Layout
  title="ƒ∞leti≈üim - CihanPan Door | Kapƒ± Fiyat Teklifi Alƒ±n"
  description="CihanPan Door ile ileti≈üime ge√ßin. PVC, Laminoks, Elitpan kapƒ± modelleri i√ßin √ºcretsiz fiyat teklifi alƒ±n. T√ºrkiye geneline teslimat ve montaj hizmeti. ‚òéÔ∏è +90 544 169 00 38"
  keywords="cihanpan door ileti≈üim, kapƒ± fiyat teklifi, pvc kapƒ± fiyatlarƒ±, kayseri kapƒ± √ºreticisi, toptan kapƒ± satƒ±≈üƒ±, kapƒ± montaj hizmeti"
  canonical={currentUrl}
  ogImage="/assets/img/og/iletisim-og.webp"
  ogType="website"
  schema={[contactPageSchema, faqSchema, breadcrumbSchema, localBusinessSchema]}
>
  <Header />

  <main class="min-h-screen bg-gray-50">
    <!-- Hero Section -->
    <section class="hero-section">
      <div class="container mx-auto px-4">
        <Breadcrumbs items={breadcrumbItems} />
        <div class="text-center">
          <h1 class="hero-title">ƒ∞leti≈üim</h1>
          <p class="hero-subtitle">
            Size en iyi hizmeti vermek i√ßin buradayƒ±z
          </p>
        </div>
      </div>
    </section>

    <!-- Contact Content -->
    <section class="contact-section">
      <div class="container mx-auto px-4">
        <div class="contact-grid">
          <!-- Contact Form -->
          <div class="form-container">
            <div class="form-header">
              <h2 class="section-title">Mesaj G√∂nderin</h2>
              <p class="section-subtitle">Mesajƒ±nƒ±zƒ± g√∂nderin, kƒ±sa s√ºrede size d√∂n√º≈ü yapalƒ±m</p>
            </div>

            <form class="contact-form" id="contactForm" novalidate>
              <!-- Honeypot for bot protection -->
              <div style="position: absolute; left: -5000px;" aria-hidden="true">
                <input type="text" name="honeypot" tabindex="-1" autocomplete="off" />
              </div>

              <div class="form-grid">
                <div class="form-group">
                  <label for="name" class="form-label">Ad Soyad *</label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    class="form-input"
                    required
                    aria-required="true"
                    aria-describedby="name-error"
                    aria-invalid="false"
                    placeholder="Adƒ±nƒ±z ve soyadƒ±nƒ±z"
                    minlength="2"
                    maxlength="100"
                  />
                  <span id="name-error" class="error-message" role="alert" aria-live="polite"></span>
                </div>

                <div class="form-group">
                  <label for="email" class="form-label">E-posta *</label>
                  <input
                    type="email"
                    id="email"
                    name="email"
                    class="form-input"
                    required
                    aria-required="true"
                    aria-describedby="email-error"
                    aria-invalid="false"
                    placeholder="ornek@email.com"
                    maxlength="100"
                  />
                  <span id="email-error" class="error-message" role="alert" aria-live="polite"></span>
                </div>

                <div class="form-group">
                  <label for="phone" class="form-label">Telefon</label>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    class="form-input"
                    aria-describedby="phone-error"
                    placeholder="0555 555 55 55"
                    pattern="[0-9]{10,}"
                    maxlength="20"
                  />
                  <span id="phone-error" class="error-message" role="alert" aria-live="polite"></span>
                </div>

                <div class="form-group">
                  <label for="subject" class="form-label">Konu *</label>
                  <select id="subject" name="subject" class="form-select" required aria-required="true" aria-describedby="subject-error" aria-invalid="false">
                    <option value="">Konu se√ßin</option>
                    <option value="pvc-kapilar">PVC Kapƒ±lar</option>
                    <option value="laminoks-kapilar">Laminoks Kapƒ±lar</option>
                    <option value="otel-kapilari">Otel Kapƒ±larƒ±</option>
                    <option value="hastane-kapilari">Hastane Kapƒ±larƒ±</option>
                    <option value="ahsap-kapilar">Ah≈üap Kapƒ±lar</option>
                    <option value="cam-kapilar">Cam Kapƒ±lar</option>
                    <option value="toptan-satis">Toptan Satƒ±≈ü</option>
                    <option value="montaj-hizmeti">Montaj Hizmeti</option>
                    <option value="diger">Diƒüer</option>
                  </select>
                  <span id="subject-error" class="error-message" role="alert" aria-live="polite"></span>
                </div>
              </div>

              <div class="form-group">
                <label for="message" class="form-label">Mesajƒ±nƒ±z *</label>
                <textarea
                  id="message"
                  name="message"
                  class="form-textarea"
                  rows="5"
                  required
                  aria-required="true"
                  aria-describedby="message-error"
                  aria-invalid="false"
                  placeholder="Mesajƒ±nƒ±zƒ± detaylƒ± bir ≈üekilde yazƒ±n..."
                  minlength="10"
                  maxlength="2000"
                ></textarea>
                <span id="message-error" class="error-message" role="alert" aria-live="polite"></span>
              </div>

              <button type="submit" class="submit-btn" aria-label="Formu g√∂nder">
                <span class="btn-text">Mesaj G√∂nder</span>
              </button>
            </form>
          </div>

          <!-- Contact Info -->
          <div class="info-container">
            <div class="contact-cards">
              <div class="contact-card">
                <div>
                  <h3 class="card-title">Telefon</h3>
                  <p class="card-text">{contactInfo.phone.display}</p>
                  <a href={contactInfo.phone.href} class="card-link">Hemen Ara</a>
                </div>
              </div>

              <div class="contact-card">
                <div>
                  <h3 class="card-title">E-posta</h3>
                  <p class="card-text">{contactInfo.email.sales}</p>
                  <a href={`mailto:${contactInfo.email.sales}`} class="card-link">E-posta G√∂nder</a>
                </div>
              </div>

              <div class="contact-card">
                <div>
                  <h3 class="card-title">Adres</h3>
                  <p class="card-text">{contactInfo.address.full}</p>
                  <a href={`https://www.google.com/maps?q=${contactInfo.coordinates.latitude},${contactInfo.coordinates.longitude}`} target="_blank" rel="noopener noreferrer" class="card-link">Haritada G√∂r</a>
                </div>
              </div>

              <div class="contact-card">
                <div>
                  <h3 class="card-title">√áalƒ±≈üma Saatleri</h3>
                  <p class="card-text working-hours">{contactInfo.workingHours.full}</p>
                </div>
              </div>
            </div>

            <!-- WhatsApp CTA -->
            <div class="whatsapp-cta">
              <div class="whatsapp-content">
                <div class="whatsapp-icon">
                  <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                    <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.890-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.688"/>
                  </svg>
                </div>
                <div>
                  <h3 class="whatsapp-title">Anƒ±nda ƒ∞leti≈üim</h3>
                  <p class="whatsapp-text">WhatsApp'tan hƒ±zlƒ± destek alƒ±n</p>
                </div>
              </div>
              <a href={`https://wa.me/${contactInfo.phone.whatsapp}?text=Merhaba, kapƒ± modelleri hakkƒ±nda bilgi almak istiyorum.`} class="whatsapp-btn" target="_blank" rel="noopener noreferrer">
                WhatsApp'ta Yazƒ±n
              </a>
            </div>

            <!-- Social Links -->
            <div class="social-section">
              <h3 class="social-title">Sosyal Medya</h3>
              <div class="social-links">
                {socialLinks.map((social) => (
                  <a href={social.href} class={`social-link ${social.color}`} target="_blank" rel="noopener noreferrer" aria-label={social.ariaLabel}>
                    <span class="social-icon" aria-hidden="true">{social.icon}</span>
                    <span class="social-name">{social.name}</span>
                  </a>
                ))}
              </div>
            </div>
          </div>
        </div>

        <!-- FAQ Section -->
        <div class="faq-section">
          <div class="faq-header">
            <h2 class="section-title text-center">Sƒ±k Sorulan Sorular</h2>
            <p class="section-subtitle text-center">En √ßok merak edilen sorularƒ±n cevaplarƒ±</p>
          </div>

          <div class="faq-container" role="list">
            {faqs.map((faq, index) => (
              <div class="faq-item" data-index={index} role="listitem">
                <button
                  class="faq-question"
                  type="button"
                  aria-expanded="false"
                  aria-controls={`faq-answer-${index}`}
                  id={`faq-question-${index}`}
                >
                  <span class="question-text">{faq.question}</span>
                  <svg class="question-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                  </svg>
                </button>
                <div id={`faq-answer-${index}`} class="faq-answer" role="region" aria-labelledby={`faq-question-${index}`}>
                  <p class="answer-text">{faq.answer}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  </main>

  <Footer />
</Layout>





<style>
  .hero-section {
    background: linear-gradient(135deg, #1e40af 0%, #3730a3 100%);
    color: white;
    padding: 6rem 0 3rem;
  }

  .hero-title {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 1rem;
  }

  .hero-subtitle {
    font-size: 1.125rem;
    opacity: 0.9;
    max-width: 500px;
    margin: 0 auto;
  }

  .contact-section {
    padding: 4rem 0;
  }

  .contact-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 3rem;
    margin-bottom: 4rem;
  }

  .form-container {
    background: white;
    padding: 2.5rem;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid #e5e7eb;
    transition: opacity 0.3s ease;
  }

  .form-container.submitting {
    opacity: 0.6;
    pointer-events: none;
  }

  .form-header {
    margin-bottom: 2rem;
  }

  .section-title {
    font-size: 1.875rem;
    font-weight: 700;
    color: #111827;
    margin-bottom: 0.5rem;
  }

  .section-subtitle {
    color: #6b7280;
    font-size: 1rem;
  }

  .form-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
    margin-bottom: 1.5rem;
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-label {
    display: block;
    font-weight: 500;
    color: #374151;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
  }

  .form-input, .form-select, .form-textarea {
    width: 100%;
    padding: 0.875rem 1rem;
    border: 1px solid #d1d5db;
    border-radius: 8px;
    font-size: 0.875rem;
    transition: all 0.2s ease;
    background: #fafafa;
  }

  .form-input:focus, .form-select:focus, .form-textarea:focus {
    outline: none;
    border-color: #3b82f6;
    background: white;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  .form-input.error, .form-select.error, .form-textarea.error {
    border-color: #ef4444;
    background: #fef2f2;
  }

  .form-input[aria-invalid="true"], .form-select[aria-invalid="true"], .form-textarea[aria-invalid="true"] {
    border-color: #ef4444;
  }

  .form-textarea {
    resize: vertical;
    min-height: 100px;
  }

  .submit-btn {
    width: 100%;
    background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
    color: white;
    border: none;
    padding: 1rem 1.5rem;
    border-radius: 8px;
    font-size: 0.875rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
  }

  .submit-btn:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: 0 10px 25px rgba(59, 130, 246, 0.3);
  }

  .submit-btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }

  .submit-btn:focus-visible {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }

  .info-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .contact-cards {
    display: grid;
    gap: 1.25rem;
  }

  .contact-card {
    background: white;
    padding: 1.5rem;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
    border: 1px solid #e5e7eb;
    transition: all 0.2s ease;
  }

  .contact-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
  }

  .card-title {
    font-size: 1rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 0.25rem;
  }

  .card-text {
    color: #6b7280;
    margin-bottom: 0.75rem;
    font-size: 0.875rem;
    line-height: 1.5;
  }

  .working-hours {
    white-space: pre-line;
    font-size: 0.8125rem;
  }

  .card-link {
    color: #3b82f6;
    text-decoration: none;
    font-weight: 500;
    font-size: 0.8125rem;
    transition: color 0.2s ease;
  }

  .card-link:hover {
    color: #1d4ed8;
  }

  .card-link:focus-visible {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
    border-radius: 4px;
  }

  .whatsapp-cta {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    padding: 2rem;
    border-radius: 12px;
    color: white;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1.5rem;
  }

  .whatsapp-content {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .whatsapp-icon {
    background: rgba(255, 255, 255, 0.2);
    padding: 1rem;
    border-radius: 50%;
  }

  .whatsapp-title {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.25rem;
  }

  .whatsapp-text {
    opacity: 0.9;
    font-size: 0.875rem;
  }

  .whatsapp-btn {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    font-size: 0.875rem;
    transition: all 0.2s ease;
    white-space: nowrap;
    border: 1px solid rgba(255, 255, 255, 0.3);
  }

  .whatsapp-btn:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
  }

  .whatsapp-btn:focus-visible {
    outline: 2px solid white;
    outline-offset: 2px;
  }

  .social-section {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
    border: 1px solid #e5e7eb;
  }

  .social-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 1rem;
  }

  .social-links {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 0.75rem;
  }

  .social-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    border-radius: 8px;
    text-decoration: none;
    color: white;
    font-weight: 500;
    font-size: 0.8125rem;
    transition: all 0.2s ease;
  }

  .social-link:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  }

  .social-link:focus-visible {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }

  .bg-emerald-500 { background: #10b981; }
  .bg-pink-500 { background: #ec4899; }
  .bg-blue-600 { background: #2563eb; }

  .faq-section {
    margin-top: 3rem;
  }

  .faq-header {
    margin-bottom: 2rem;
  }

  .faq-container {
    max-width: 768px;
    margin: 0 auto;
    display: grid;
    gap: 0.75rem;
  }

  .faq-item {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
    border: 1px solid #e5e7eb;
    transition: all 0.2s ease;
  }

  .faq-item.active {
    box-shadow: 0 4px 20px rgba(59, 130, 246, 0.15);
    border-color: #3b82f6;
  }

  .faq-question {
    width: 100%;
    padding: 1.25rem 1.5rem;
    background: none;
    border: none;
    text-align: left;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.9375rem;
    font-weight: 500;
    color: #111827;
    transition: all 0.2s ease;
  }

  .faq-question:hover {
    background: #f9fafb;
  }

  .faq-question:focus-visible {
    outline: 2px solid #3b82f6;
    outline-offset: -2px;
  }

  .question-icon {
    width: 1.25rem;
    height: 1.25rem;
    color: #6b7280;
    transition: transform 0.2s ease;
    flex-shrink: 0;
  }

  .faq-item.active .question-icon {
    transform: rotate(45deg);
    color: #3b82f6;
  }

  .faq-answer {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }

  .faq-item.active .faq-answer {
    max-height: 200px;
  }

  .answer-text {
    padding: 0 1.5rem 1.5rem;
    color: #6b7280;
    line-height: 1.6;
    font-size: 0.875rem;
  }

  .notification {
    position: fixed;
    top: 2rem;
    right: 2rem;
    padding: 1.5rem 2rem;
    border-radius: 12px;
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.3);
    z-index: 99999;
    transform: translateX(120%);
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    max-width: 400px;
    min-width: 320px;
  }

  .notification.show {
    transform: translateX(0);
  }

  .notification.success {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    color: white;
  }

  .notification.error {
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    color: white;
  }

  .notification.info {
    background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
    color: white;
  }

  .notification-content {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    position: relative;
  }

  .notification-icon {
    width: 1.75rem;
    height: 1.75rem;
    flex-shrink: 0;
    margin-top: 0.125rem;
  }

  .notification-close {
    position: absolute;
    top: -0.5rem;
    right: -0.75rem;
    background: rgba(0, 0, 0, 0.2);
    border: none;
    color: white;
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    cursor: pointer;
    font-size: 1.125rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    font-weight: bold;
  }

  .notification-close:hover {
    background: rgba(0, 0, 0, 0.3);
    transform: scale(1.1);
  }

  .notification-title {
    font-weight: 700;
    margin-bottom: 0.375rem;
    font-size: 1.0625rem;
  }

  .notification-text {
    font-size: 0.9375rem;
    opacity: 0.95;
    line-height: 1.4;
  }

  .error-message {
    display: block;
    color: #ef4444;
    font-size: 0.75rem;
    margin-top: 0.25rem;
    min-height: 1rem;
  }

  .faq-question[aria-expanded="true"] {
    background: #f9fafb;
  }

  @media (min-width: 768px) {
    .contact-grid {
      grid-template-columns: 1.2fr 1fr;
      gap: 4rem;
    }
  }

  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.25rem;
    }

    .form-container {
      padding: 1.5rem;
    }

    .form-grid {
      grid-template-columns: 1fr;
      gap: 0;
    }

    .contact-card {
      padding: 1.25rem;
    }

    .whatsapp-cta {
      flex-direction: column;
      text-align: center;
    }

    .whatsapp-content {
      justify-content: center;
    }

    .social-links {
      grid-template-columns: 1fr;
    }

    .notification {
      top: 1rem;
      right: 1rem;
      left: 1rem;
      max-width: none;
      min-width: auto;
    }
  }

  @media (max-width: 480px) {
    .hero-section {
      padding: 4rem 0 2rem;
    }

    .contact-section {
      padding: 2rem 0;
    }

    .form-container,
    .social-section {
      padding: 1.25rem;
    }

    .notification {
      top: 0.5rem;
      right: 0.5rem;
      left: 0.5rem;
      padding: 1rem 1.25rem;
    }

    .notification-title {
      font-size: 0.9375rem;
    }

    .notification-text {
      font-size: 0.8125rem;
    }
  }

  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  .animate-spin {
    animation: spin 1s linear infinite;
  }

  .hidden { display: none; }
  .text-center { text-align: center; }
</style>

<script is:inline define:vars={{ publicWeb3formsKey }}>
  console.log('üîµ Script loaded!');
  console.log('üîµ Access Key:', publicWeb3formsKey ? 'EXISTS' : 'MISSING');

  window.addEventListener('load', function() {
    console.log('üü¢ Page loaded!');

    const contactForm = document.getElementById('contactForm');
    console.log('üü¢ Form element:', contactForm ? 'FOUND' : 'NOT FOUND');

    if (!contactForm) {
      alert('HATA: Form bulunamadƒ±!');
      return;
    }

    const accessKey = publicWeb3formsKey;

    if (!accessKey) {
      console.error('‚ùå Web3Forms access key is not configured');
      alert('HATA: Web3Forms API key tanƒ±mlƒ± deƒüil!');
      return;
    }

    console.log('‚úÖ Access key configured');

    // Form submission state
    let isSubmitting = false;
    let lastSubmitTime = 0;
    const SUBMIT_COOLDOWN = 3000;

    // Validation functions
    function isValidEmail(email) {
      return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    }

    function isValidPhone(phone) {
      const cleaned = phone.replace(/\D/g, '');
      return !phone || cleaned.length >= 10;
    }

    function isValidName(name) {
      return name.trim().length >= 2;
    }

    function isValidMessage(message) {
      return message.trim().length >= 10;
    }

    // Show error message
    function showError(field, message) {
      const errorSpan = document.getElementById(`${field.id}-error`);
      if (errorSpan) {
        errorSpan.textContent = message;
        field.setAttribute('aria-invalid', 'true');
        field.classList.add('error');
      }
    }

    // Clear error message
    function clearError(field) {
      const errorSpan = document.getElementById(`${field.id}-error`);
      if (errorSpan) {
        errorSpan.textContent = '';
        field.setAttribute('aria-invalid', 'false');
        field.classList.remove('error');
      }
    }

    // Validate field
    function validateField(field) {
      clearError(field);

      if (field.hasAttribute('required') && !field.value.trim()) {
        showError(field, 'Bu alan zorunludur.');
        return false;
      }

      if (field.type === 'email' && field.value) {
        if (!isValidEmail(field.value)) {
          showError(field, 'Ge√ßerli bir e-posta adresi girin.');
          return false;
        }
      }

      if (field.type === 'tel' && field.value) {
        if (!isValidPhone(field.value)) {
          showError(field, 'Ge√ßerli bir telefon numarasƒ± girin (en az 10 rakam).');
          return false;
        }
      }

      if (field.id === 'name' && field.value) {
        if (!isValidName(field.value)) {
          showError(field, 'Adƒ±nƒ±z en az 2 karakter olmalƒ±dƒ±r.');
          return false;
        }
      }

      if (field.id === 'message' && field.value) {
        if (!isValidMessage(field.value)) {
          showError(field, 'Mesajƒ±nƒ±z en az 10 karakter olmalƒ±dƒ±r.');
          return false;
        }
      }

      return true;
    }

    // Set button loading state
    function setButtonLoading(button, isLoading) {
      const btnText = button.querySelector('.btn-text');
      if (isLoading) {
        button.dataset.originalText = btnText.textContent;
        btnText.innerHTML = `
          <svg class="animate-spin inline-block mr-2" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          G√∂nderiliyor...
        `;
        button.disabled = true;
      } else {
        btnText.textContent = button.dataset.originalText || 'Mesaj G√∂nder';
        button.disabled = false;
      }
    }

function showNotification(type, title, text) {
  console.log('üì¢ Showing notification:', type, title, text);

  const oldNotif = document.getElementById('customNotification');
  if (oldNotif) oldNotif.remove();

  const notif = document.createElement('div');
  notif.id = 'customNotification';
  notif.style.cssText = `position: fixed; top: 20px; right: 20px; min-width: 350px; max-width: 450px; background: white; border-radius: 12px; box-shadow: 0 20px 60px rgba(0,0,0,0.3); z-index: 999999; animation: slideIn 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55); overflow: hidden;`;

  let bgColor = type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#3b82f6';
  let icon = type === 'success' ? '‚úì' : type === 'error' ? '‚úï' : '‚Ñπ';

  notif.innerHTML = `<style>@keyframes slideIn{from{transform:translateX(120%);opacity:0}to{transform:translateX(0);opacity:1}}@keyframes slideOut{from{transform:translateX(0);opacity:1}to{transform:translateX(120%);opacity:0}}@keyframes progressBar{from{width:100%}to{width:0%}}@media(max-width:768px){#customNotification{top:10px!important;right:10px!important;left:10px!important;min-width:auto!important;max-width:none!important}}</style><div style="display:flex;align-items:flex-start;padding:20px;gap:15px"><div style="width:48px;height:48px;border-radius:50%;background:${bgColor};display:flex;align-items:center;justify-content:center;font-size:24px;font-weight:bold;color:white;flex-shrink:0">${icon}</div><div style="flex:1;padding-top:4px"><div style="font-size:17px;font-weight:700;color:#111827;margin-bottom:6px">${title}</div><div style="font-size:14px;color:#6b7280;line-height:1.5">${text}</div></div><button onclick="this.closest('#customNotification').remove()" style="background:transparent;border:none;color:#9ca3af;font-size:28px;cursor:pointer;padding:0;width:32px;height:32px;display:flex;align-items:center;justify-content:center;border-radius:6px;transition:all 0.2s;line-height:1;margin-top:-4px" onmouseover="this.style.background='#f3f4f6';this.style.color='#374151'" onmouseout="this.style.background='transparent';this.style.color='#9ca3af'">&times;</button></div><div style="height:4px;background:#e5e7eb;position:relative;overflow:hidden"><div style="height:100%;background:${bgColor};animation:progressBar 5s linear forwards"></div></div>`;

  document.body.appendChild(notif);

  setTimeout(() => {
    if (notif && notif.parentNode) {
      notif.style.animation = 'slideOut 0.3s ease forwards';
      setTimeout(() => notif.remove(), 300);
    }
  }, 5000);
}

    // FAQ Accordion
    const faqItems = document.querySelectorAll('.faq-item');
    faqItems.forEach(function(item, index) {
      const question = item.querySelector('.faq-question');

      if (question) {
        question.addEventListener('click', function() {
          const isActive = item.classList.contains('active');

          faqItems.forEach(function(faq) {
            faq.classList.remove('active');
            const btn = faq.querySelector('.faq-question');
            if (btn) btn.setAttribute('aria-expanded', 'false');
          });

          if (!isActive) {
            item.classList.add('active');
            question.setAttribute('aria-expanded', 'true');
          }
        });

        question.addEventListener('keydown', function(e) {
          let targetIndex;

          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            question.click();
          } else if (e.key === 'ArrowDown') {
            e.preventDefault();
            targetIndex = (index + 1) % faqItems.length;
          } else if (e.key === 'ArrowUp') {
            e.preventDefault();
            targetIndex = (index - 1 + faqItems.length) % faqItems.length;
          } else if (e.key === 'Home') {
            e.preventDefault();
            targetIndex = 0;
          } else if (e.key === 'End') {
            e.preventDefault();
            targetIndex = faqItems.length - 1;
          }

          if (targetIndex !== undefined) {
            const targetBtn = faqItems[targetIndex].querySelector('.faq-question');
            if (targetBtn) targetBtn.focus();
          }
        });
      }
    });

    // Form handling
    console.log('üü¢ Setting up form listener...');

    contactForm.addEventListener('submit', async function(e) {
      e.preventDefault();
      e.stopPropagation();


      console.log('=== FORM SUBMIT STARTED ===');
      console.log('Access Key:', accessKey ? 'EXISTS' : 'MISSING');

      if (!accessKey) {
        console.error('Access key is missing!');
        showNotification('error', 'Yapƒ±landƒ±rma Hatasƒ±', 'Form g√∂nderimi yapƒ±landƒ±rƒ±lmamƒ±≈ü. L√ºtfen site y√∂neticisiyle ileti≈üime ge√ßin.');
        return;
      }

      // Check rate limiting
      const now = Date.now();
      console.log('Rate limit check:', { now, lastSubmitTime, cooldown: SUBMIT_COOLDOWN, timeSince: now - lastSubmitTime });

      if (now - lastSubmitTime < SUBMIT_COOLDOWN) {
        console.warn('Rate limit exceeded');
        showNotification('error', '√áok Hƒ±zlƒ±!', 'L√ºtfen birka√ß saniye bekleyip tekrar deneyin.');
        return;
      }

      // Check if already submitting
      console.log('Is submitting:', isSubmitting);
      if (isSubmitting) {
        console.warn('Already submitting, ignoring...');
        return;
      }

      // Validate all fields
      console.log('Starting validation...');
      let isValid = true;
      const fields = contactForm.querySelectorAll('input, textarea, select');
      fields.forEach(field => {
        if (field.name !== 'honeypot') {
          const valid = validateField(field);
          console.log(`Field ${field.name}: ${valid ? 'VALID' : 'INVALID'}`);
          if (!valid) isValid = false;
        }
      });

      console.log('Overall validation:', isValid ? 'PASSED' : 'FAILED');

      if (!isValid) {
        showNotification('error', 'Form Hatasƒ±', 'L√ºtfen t√ºm zorunlu alanlarƒ± doƒüru ≈üekilde doldurun.');
        return;
      }

      // Check honeypot
      const honeypot = contactForm.querySelector('input[name="honeypot"]');
      if (honeypot && honeypot.value) {
        console.log('Bot detected via honeypot');
        showNotification('error', 'Hata', 'Form g√∂nderilemedi. L√ºtfen sayfayƒ± yenileyip tekrar deneyin.');
        return;
      }

      console.log('All checks passed, preparing to submit...');

      const submitBtn = contactForm.querySelector('.submit-btn');
      const formContainer = document.querySelector('.form-container');

      isSubmitting = true;
      lastSubmitTime = now;
      setButtonLoading(submitBtn, true);
      formContainer.classList.add('submitting');

      console.log('UI updated, starting API call...');

      try {
        const formData = new FormData(contactForm);
        const data = {
          access_key: accessKey,
          name: formData.get('name'),
          email: formData.get('email'),
          phone: formData.get('phone') || 'Belirtilmedi',
          subject: formData.get('subject'),
          message: formData.get('message'),
          from_name: 'CihanPan Door Iletisim Formu',
          replyto: formData.get('email')
        };

        console.log('Form data prepared:', {
          name: data.name,
          email: data.email,
          phone: data.phone,
          subject: data.subject,
          messageLength: data.message.length
        });

        console.log('Sending request to Web3Forms API...');

        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), 15000);

        const response = await fetch('https://api.web3forms.com/submit', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify(data),
          signal: controller.signal
        });

        clearTimeout(timeoutId);

        console.log('Response received:', response.status, response.statusText);

        const result = await response.json();

        console.log('Response data:', result);

        if (result.success) {
          console.log('‚úì SUCCESS - Form submitted successfully!');

          // Simple alert instead of notification
          showNotification('success', 'Ba≈üarƒ±yla G√∂nderildi!', 'Mesajƒ±nƒ±z ba≈üarƒ±yla alƒ±nmƒ±≈ütƒ±r. En kƒ±sa s√ºrede size d√∂n√º≈ü yapacaƒüƒ±z.');

          contactForm.reset();
          console.log('Form reset completed');

          // Track successful submission
          if (typeof gtag !== 'undefined') {
            gtag('event', 'form_submit', {
              event_category: 'Contact',
              event_label: data.subject
            });
            console.log('Analytics event sent');
          }
        } else {
          console.error('‚úó API returned success: false', result);
          throw new Error(result.message || 'Form g√∂nderilemedi');
        }
      } catch (error) {
        console.error('‚úó SUBMISSION ERROR:', error);
        console.error('Error name:', error.name);
        console.error('Error message:', error.message);
        console.error('Error stack:', error.stack);

        let errorMessage = 'Bir hata olu≈ütu. L√ºtfen tekrar deneyin.';

        if (error.name === 'AbortError') {
          errorMessage = 'ƒ∞stek zaman a≈üƒ±mƒ±na uƒüradƒ±. ƒ∞nternet baƒülantƒ±nƒ±zƒ± kontrol edip tekrar deneyin.';
        } else if (error.message.includes('fetch') || error.message.includes('network')) {
          errorMessage = 'Baƒülantƒ± hatasƒ±. ƒ∞nternet baƒülantƒ±nƒ±zƒ± kontrol edin.';
        }

        showNotification('error', '‚úó G√∂nderim Ba≈üarƒ±sƒ±z!', errorMessage + ' Alternatif olarak telefon veya e-posta ile ileti≈üime ge√ßebilirsiniz.');
      } finally {
        console.log('Cleaning up...');
        isSubmitting = false;
        setButtonLoading(submitBtn, false);
        formContainer.classList.remove('submitting');
        console.log('=== FORM SUBMIT ENDED ===');
      }
    });

    // Track form engagement
    let formEngaged = false;
    contactForm.addEventListener('focus', function() {
      if (!formEngaged) {
        formEngaged = true;
        console.log('üìù Form engaged');
        if (typeof gtag !== 'undefined') {
          gtag('event', 'form_start', {
            event_category: 'Contact',
            event_label: 'Contact Form'
          });
        }
      }
    }, true);

    console.log('‚úÖ Form initialized successfully!');
  });
</script>
