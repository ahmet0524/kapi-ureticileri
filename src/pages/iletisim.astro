---
// src/pages/iletisim.astro
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';

const baseUrl = 'https://kapi-ureticileri.vercel.app';
const currentUrl = `${baseUrl}${Astro.url.pathname}`;

const contactInfo = {
  phone: {
    display: '+90 544 169 00 38',
    schema: '+90-544-169-0038',
    href: 'tel:+905441690038',
    whatsapp: '905441690038'
  },
  email: {
    primary: 'export@cihanpandoor.com',
    alternative: 'exportcihanpandoor@gmail.com'
  },
  website: 'https://www.cihanpandoor.com',
  address: {
    full: 'Organize Sanayi Bölgesi 29. Sokak No:28, Melikgazi, Kayseri 38070, Turkey',
    street: 'Organize Sanayi Bölgesi 29. Sokak No:28',
    city: 'Kayseri',
    postalCode: '38070'
  },
  coordinates: {
    latitude: 38.713006945276334,
    longitude: 35.32028880684966
  },
  maps: {
    url: 'https://maps.app.goo.gl/XFKFB7tBeBGJ435N9',
    embedUrl: 'https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d49811.34634400007!2d35.32028880684966!3d38.713006945276334!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x152b05342e965841%3A0xfa7a02f50cdebeee!2zQ2loYW5wYW5kb29yIMSww6cgT2RhIEthcMSxc8SxIMSwbWFsYXTEsSB2ZSDEsGhyYWNhdMSx!5e0!3m2!1sen!2str!4v1760624358805!5m2!1sen!2str'
  }
};

const socialLinks = [
  {
    name: 'WhatsApp',
    icon: '📱',
    href: `https://wa.me/${contactInfo.phone.whatsapp}?text=Merhaba, CihanPan Door kapı modelleri hakkında bilgi almak istiyorum.`,
    color: 'bg-emerald-500'
  },
  {
    name: 'Google Maps',
    icon: '📍',
    href: contactInfo.maps.url,
    color: 'bg-red-500'
  },
  {
    name: 'Instagram',
    icon: '📷',
    href: 'https://www.instagram.com/cihanpandoor',
    color: 'bg-pink-500'
  },
  {
    name: 'LinkedIn',
    icon: '💼',
    href: 'https://www.linkedin.com/company/cihanpandoor',
    color: 'bg-blue-600'
  }
];

const faqs = [
  {
    question: 'Hangi illere teslimat yapıyorsunuz?',
    answer: 'Türkiye geneline teslimat yapıyoruz. İstanbul, Ankara, İzmir, Bursa, Antalya dahil tüm illere hızlı kargo ile gönderim sağlıyoruz. Büyük projeler için özel nakliye seçenekleri ve uluslararası teslimat imkanlarımız da mevcuttur. Teslimat süreleri bölgeye göre 3-7 iş günü arasında değişmektedir.'
  },
  {
    question: 'Montaj hizmeti veriyor musunuz?',
    answer: 'Evet, tüm Türkiye genelinde profesyonel montaj hizmeti sunuyoruz. Uzman montaj ekibimiz kapı montajını bir günde tamamlar. Montaj hizmeti fiyatları bölgeye ve kapı sayısına göre değişkenlik göstermektedir.'
  },
  {
    question: 'Garanti süreniz ne kadar?',
    answer: 'Tüm PVC, Laminoks ve Elitpan kapı modellerimiz için 5 yıl üretici garantisi veriyoruz. Garanti kapsamına malzeme ve işçilik hataları, renk solması, yüzey bozulmaları dahildir.'
  },
  {
    question: 'Toptan satış yapıyor musunuz?',
    answer: 'Evet, inşaat firmaları, müteahhitler ve bayiler için özel toptan fiyatlarımız bulunmaktadır. Minimum 50 adet siparişlerde özel indirimler uyguluyoruz.'
  },
  {
    question: 'Ödeme seçenekleri nelerdir?',
    answer: 'Kredi kartı, banka havalesi ve kapıda ödeme seçeneklerimiz mevcuttur. Toptan siparişlerde vadeli ödeme planları sunuyoruz.'
  },
  {
    question: 'Özel ölçülerde kapı üretimi yapıyor musunuz?',
    answer: 'Evet, standart ölçülerin dışında özel ölçülerde kapı üretimi yapıyoruz. Maksimum genişlik 120cm, maksimum yükseklik 250cm olabilir. Özel ölçü kapılar için üretim süresi 10-15 iş günüdür.'
  }
];

const breadcrumbItems = [
  { name: "Ana Sayfa", href: "/" },
  { name: "İletişim" }
];

const contactPageSchema = {
  "@context": "https://schema.org",
  "@type": "ContactPage",
  "name": "İletişim - CihanPan Door",
  "description": "CihanPan Door ile iletişime geçin. PVC, Laminoks, Elitpan kapı modelleri için fiyat teklifi alın.",
  "url": currentUrl,
  "inLanguage": "tr-TR",
  "mainEntity": {
    "@type": "Organization",
    "name": "CihanPan Door",
    "url": baseUrl,
    "logo": `${baseUrl}/assets/images/logo/header_logo1.webp`,
    "contactPoint": [
      {
        "@type": "ContactPoint",
        "telephone": contactInfo.phone.schema,
        "contactType": "Sales",
        "email": contactInfo.email.primary,
        "areaServed": ["TR", "EU", "ME"],
        "availableLanguage": ["Turkish", "English", "German", "Arabic"]
      }
    ],
    "address": {
      "@type": "PostalAddress",
      "streetAddress": contactInfo.address.street,
      "addressLocality": contactInfo.address.city,
      "postalCode": contactInfo.address.postalCode,
      "addressCountry": "TR"
    },
    "geo": {
      "@type": "GeoCoordinates",
      "latitude": contactInfo.coordinates.latitude,
      "longitude": contactInfo.coordinates.longitude
    },
    "hasMap": contactInfo.maps.url
  }
};

const localBusinessSchema = {
  "@context": "https://schema.org",
  "@type": "LocalBusiness",
  "name": "CihanPan Door",
  "image": `${baseUrl}/assets/images/logo/header_logo1.webp`,
  "url": baseUrl,
  "telephone": contactInfo.phone.schema,
  "email": contactInfo.email.primary,
  "priceRange": "$$",
  "address": {
    "@type": "PostalAddress",
    "streetAddress": contactInfo.address.street,
    "addressLocality": contactInfo.address.city,
    "postalCode": contactInfo.address.postalCode,
    "addressCountry": "TR"
  },
  "geo": {
    "@type": "GeoCoordinates",
    "latitude": contactInfo.coordinates.latitude,
    "longitude": contactInfo.coordinates.longitude
  },
  "hasMap": contactInfo.maps.url,
  "openingHoursSpecification": [
    {
      "@type": "OpeningHoursSpecification",
      "dayOfWeek": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      "opens": "08:00",
      "closes": "18:00"
    }
  ],
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": "4.8",
    "reviewCount": "152"
  }
};

const faqSchema = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": faqs.map(faq => ({
    "@type": "Question",
    "name": faq.question,
    "acceptedAnswer": {
      "@type": "Answer",
      "text": faq.answer
    }
  }))
};

const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": breadcrumbItems.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.name,
    "item": item.href ? `${baseUrl}${item.href}` : currentUrl
  }))
};

const publicWeb3formsKey = import.meta.env.PUBLIC_WEB3FORMS_KEY || 'd890c520-d1c8-428f-9abb-f510ef10e1ff';
---

<Layout
  title="İletişim - CihanPan Door | Kapı Fiyat Teklifi ☎️ +90 544 169 00 38"
  description="CihanPan Door Kayseri. PVC, Laminoks, Elitpan kapı modelleri için ücretsiz fiyat teklifi alın. Türkiye geneline teslimat ve montaj hizmeti."
  keywords="cihanpan door iletişim, kayseri kapı üreticisi, pvc kapı fiyat teklifi, toptan kapı satışı"
  canonical={currentUrl}
  ogImage="/assets/img/og/iletisim-og.webp"
  ogType="website"
  schema={[contactPageSchema, localBusinessSchema, faqSchema, breadcrumbSchema]}
>
  <Header />
  <Breadcrumbs items={breadcrumbItems} />

  <main>
    <!-- Hero Section -->
    <section class="hero">
      <div class="container">
        <h1 class="hero-title">İletişime Geçin</h1>
        <p class="hero-subtitle">
          Kapı modelleri hakkında detaylı bilgi almak ve ücretsiz fiyat teklifi için bizimle iletişime geçin.
        </p>
      </div>
    </section>

    <!-- Contact Info Cards -->
    <section class="contact-section">
      <div class="container">
        <div class="contact-grid">

          <!-- Telefon -->
          <div class="contact-card">
            <div class="icon">📞</div>
            <h3>Telefon</h3>
            <a href={contactInfo.phone.href} class="contact-link">
              {contactInfo.phone.display}
            </a>
            <p class="text-sm">Pazartesi - Cumartesi: 08:00 - 18:00</p>
          </div>

          <!-- WhatsApp -->
          <div class="contact-card">
            <div class="icon">💬</div>
            <h3>WhatsApp</h3>
            <a href={socialLinks[0].href} target="_blank" rel="noopener" class="contact-link">
              Mesaj Gönder
            </a>
            <p class="text-sm">7/24 Mesaj Atabilirsiniz</p>
          </div>

          <!-- Email -->
          <div class="contact-card">
            <div class="icon">✉️</div>
            <h3>Email</h3>
            <a href={`mailto:${contactInfo.email.primary}`} class="contact-link">
              {contactInfo.email.primary}
            </a>
            <p class="text-sm">24 saat içinde yanıt</p>
          </div>

          <!-- Adres -->
          <div class="contact-card">
            <div class="icon">📍</div>
            <h3>Adres</h3>
            <address style="font-style: normal;">
              {contactInfo.address.street}<br/>
              {contactInfo.address.city} {contactInfo.address.postalCode}
            </address>
            <a href={contactInfo.maps.url} target="_blank" rel="noopener" class="contact-link">
              Haritada Gör →
            </a>
          </div>

        </div>
      </div>
    </section>

   <!-- Contact Form -->
    <section class="form-section">
      <div class="container">
        <div class="form-wrapper">
          <div class="form-header">
            <h2>Ücretsiz Fiyat Teklifi Alın</h2>
            <p>Formu doldurun, en kısa sürede size dönelim.</p>
          </div>

          <form id="contactForm" class="contact-form" novalidate>
            <input type="text" name="honeypot" style="display:none" tabindex="-1" autocomplete="off" />

            <div class="form-row">
              <div class="form-group">
                <label for="name">Ad Soyad *</label>
                <input type="text" id="name" name="name" required placeholder="Adınız Soyadınız" minlength="2" />
                <span id="name-error" class="error-message"></span>
              </div>

              <div class="form-group">
                <label for="email">Email *</label>
                <input type="email" id="email" name="email" required placeholder="ornek@email.com" />
                <span id="email-error" class="error-message"></span>
              </div>
            </div>

            <div class="form-row">
              <div class="form-group">
                <label for="phone">Telefon *</label>
                <input type="tel" id="phone" name="phone" required placeholder="+90 5XX XXX XX XX" />
                <span id="phone-error" class="error-message"></span>
              </div>

              <div class="form-group">
                <label for="company">Firma Adı</label>
                <input type="text" id="company" name="company" placeholder="Firma Adınız (Opsiyonel)" />
              </div>
            </div>

            <div class="form-group">
              <label for="product">Ürün İlgi Alanı</label>
              <select id="product" name="product">
                <option value="">Seçiniz</option>
                <option value="pvc">PVC Kapılar</option>
                <option value="laminoks">Laminoks Kapılar</option>
                <option value="elitpan">Elitpan Kapılar</option>
                <option value="hastane">Hastane Kapıları</option>
                <option value="otel">Otel Kapıları</option>
                <option value="yangin">Yangına Dayanıklı Kapılar</option>
                <option value="diger">Diğer</option>
              </select>
            </div>

            <div class="form-group">
              <label for="message">Mesajınız *</label>
              <textarea id="message" name="message" required rows="5" placeholder="Proje detaylarınızı, kapı adedi, teslimat yeri gibi bilgileri paylaşın..." minlength="10"></textarea>
              <span id="message-error" class="error-message"></span>
            </div>

            <button type="submit" class="btn-submit">
              <span class="btn-text">Teklif İsteyin</span>
            </button>
          </form>
        </div>
      </div>
    </section>

    <!-- Google Maps -->
    <section class="map-section">
      <div class="container">
        <h2>Bizi Ziyaret Edin</h2>
        <div class="map-wrapper">
          <iframe
            src={contactInfo.maps.embedUrl}
            width="100%"
            height="450"
            style="border:0;"
            allowfullscreen=""
            loading="lazy"
            referrerpolicy="no-referrer-when-downgrade"
            title="CihanPan Door Kayseri Organize Sanayi Konumu"
          ></iframe>
        </div>
        <div class="map-actions">
          <a href={contactInfo.maps.url} target="_blank" rel="noopener noreferrer" class="btn btn-primary">
            📍 Google Maps'te Aç
          </a>
          <a href={`https://www.google.com/maps/dir//${contactInfo.coordinates.latitude},${contactInfo.coordinates.longitude}`}
             target="_blank"
             rel="noopener noreferrer"
             class="btn btn-secondary">
            🧭 Yol Tarifi Al
          </a>
        </div>
      </div>
    </section>

    <!-- FAQ Section -->
    <section class="faq-section">
      <div class="container">
        <h2>Sık Sorulan Sorular</h2>
        <div class="faq-list">
          {faqs.map((faq) => (
            <details class="faq-item">
              <summary>{faq.question}</summary>
              <p>{faq.answer}</p>
            </details>
          ))}
        </div>
      </div>
    </section>

    <!-- Social Links -->
    <section class="social-section">
      <div class="container">
        <h2>Sosyal Medyada Bizi Takip Edin</h2>
        <div class="social-grid">
          {socialLinks.map((link) => (
            <a href={link.href} target="_blank" rel="noopener noreferrer" class={`social-card ${link.color}`}>
              <span class="social-icon">{link.icon}</span>
              <span class="social-name">{link.name}</span>
            </a>
          ))}
        </div>
      </div>
    </section>

  </main>

  <Footer />
</Layout>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .hero {
    padding: 4rem 0;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    text-align: center;
  }

  .hero-title {
    font-size: clamp(2rem, 4vw, 3.5rem);
    font-weight: 800;
    margin-bottom: 1rem;
  }

  .hero-subtitle {
    font-size: clamp(1rem, 2vw, 1.25rem);
    opacity: 0.95;
    max-width: 600px;
    margin: 0 auto;
  }

  .contact-section {
    padding: 5rem 0;
    background: #f8fafc;
  }

  .contact-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
  }

  .contact-card {
    background: white;
    padding: 2rem;
    border-radius: 12px;
    text-align: center;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    transition: transform 0.3s ease;
  }

  .contact-card:hover {
    transform: translateY(-5px);
  }

  .icon {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  .contact-card h3 {
    font-size: 1.5rem;
    color: #1a202c;
    margin-bottom: 1rem;
  }

  .contact-link {
    color: #667eea;
    text-decoration: none;
    font-weight: 600;
    font-size: 1.1rem;
    display: block;
    margin-bottom: 0.5rem;
  }

  .contact-link:hover {
    text-decoration: underline;
  }

  .text-sm {
    color: #6b7280;
    font-size: 0.9rem;
  }

  .form-section {
    padding: 5rem 0;
    background: white;
  }

  .form-wrapper {
    max-width: 800px;
    margin: 0 auto;
    background: #f8fafc;
    padding: 3rem;
    border-radius: 12px;
  }

  .form-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .form-header h2 {
    font-size: 2.5rem;
    color: #1a202c;
    margin-bottom: 1rem;
  }

  .form-header p {
    color: #6b7280;
    font-size: 1.1rem;
  }

  .contact-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .form-row {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  .form-group label {
    color: #1a202c;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .form-group input,
  .form-group select,
  .form-group textarea {
    padding: 1rem;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    font-size: 1rem;
    transition: border-color 0.3s ease;
  }

  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: #667eea;
  }

  .form-group input.error,
  .form-group textarea.error {
    border-color: #ef4444;
  }

  .error-message {
    color: #ef4444;
    font-size: 0.875rem;
    margin-top: 0.25rem;
    min-height: 1rem;
  }

  .btn-submit {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 1rem 3rem;
    border: none;
    border-radius: 8px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: transform 0.3s ease;
  }

  .btn-submit:hover:not(:disabled) {
    transform: translateY(-2px);
  }

  .btn-submit:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }

  .map-section {
    padding: 5rem 0;
    background: #f8fafc;
  }

  .map-section h2 {
    text-align: center;
    font-size: 2.5rem;
    color: #1a202c;
    margin-bottom: 3rem;
  }

  .map-wrapper {
    border-radius: 12px;
    overflow: hidden;
    margin-bottom: 2rem;
  }

  .map-actions {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .btn {
    padding: 1rem 2rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .btn-primary {
    background: #667eea;
    color: white;
  }

  .btn-primary:hover {
    background: #5a67d8;
  }

  .btn-secondary {
    background: white;
    color: #667eea;
    border: 2px solid #667eea;
  }

  .btn-secondary:hover {
    background: #667eea;
    color: white;
  }

  .faq-section {
    padding: 5rem 0;
    background: white;
  }

  .faq-section h2 {
    text-align: center;
    font-size: 2.5rem;
    color: #1a202c;
    margin-bottom: 3rem;
  }

  .faq-list {
    max-width: 800px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .faq-item {
    background: #f8fafc;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    overflow: hidden;
  }

  .faq-item summary {
    padding: 1.5rem;
    cursor: pointer;
    font-weight: 600;
    color: #1a202c;
    list-style: none;
  }

  .faq-item summary::after {
    content: "+";
    float: right;
    font-size: 1.5rem;
    color: #667eea;
  }

  .faq-item[open] summary::after {
    content: "−";
  }

  .faq-item p {
    padding: 0 1.5rem 1.5rem;
    color: #4a5568;
    line-height: 1.6;
  }

  .social-section {
    padding: 5rem 0;
    background: #f8fafc;
  }

  .social-section h2 {
    text-align: center;
    font-size: 2.5rem;
    color: #1a202c;
    margin-bottom: 3rem;
  }

  .social-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    max-width: 800px;
    margin: 0 auto;
  }

  .social-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 2rem;
    border-radius: 12px;
    color: white;
    text-decoration: none;
    transition: transform 0.3s ease;
  }

  .social-card:hover {
    transform: translateY(-5px);
  }

  .social-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
  }

  .social-name {
    font-weight: 600;
    font-size: 1.1rem;
  }

  .bg-emerald-500 { background: #10b981; }
  .bg-red-500 { background: #ef4444; }
  .bg-pink-500 { background: #ec4899; }
  .bg-blue-600 { background: #2563eb; }

  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  .animate-spin {
    animation: spin 1s linear infinite;
  }

  @media (max-width: 768px) {
    .form-wrapper {
      padding: 2rem 1.5rem;
    }

    .form-row {
      grid-template-columns: 1fr;
    }

    .map-actions {
      flex-direction: column;
    }

    .btn {
      width: 100%;
      text-align: center;
    }
  }
</style>

<script is:inline define:vars={{ publicWeb3formsKey }}>
  document.addEventListener('DOMContentLoaded', function() {
    const accessKey = publicWeb3formsKey;

    // Validation functions
    function isValidEmail(email) {
      return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    }

    function isValidPhone(phone) {
      const cleaned = phone.replace(/\D/g, '');
      return cleaned.length >= 10;
    }

    function isValidName(name) {
      return name.trim().length >= 2;
    }

    function isValidMessage(message) {
      return message.trim().length >= 10;
    }

    function showError(field, message) {
      const errorSpan = document.getElementById(`${field.id}-error`);
      if (errorSpan) {
        errorSpan.textContent = message;
        field.classList.add('error');
      }
    }

    function clearError(field) {
      const errorSpan = document.getElementById(`${field.id}-error`);
      if (errorSpan) {
        errorSpan.textContent = '';
        field.classList.remove('error');
      }
    }

    function validateField(field) {
      clearError(field);

      if (field.hasAttribute('required') && !field.value.trim()) {
        showError(field, 'Bu alan zorunludur.');
        return false;
      }

      if (field.type === 'email' && field.value) {
        if (!isValidEmail(field.value)) {
          showError(field, 'Geçerli bir e-posta adresi girin.');
          return false;
        }
      }

      if (field.type === 'tel' && field.value) {
        if (!isValidPhone(field.value)) {
          showError(field, 'Geçerli bir telefon numarası girin (en az 10 rakam).');
          return false;
        }
      }

      if (field.id === 'name' && field.value) {
        if (!isValidName(field.value)) {
          showError(field, 'Adınız en az 2 karakter olmalıdır.');
          return false;
        }
      }

      if (field.id === 'message' && field.value) {
        if (!isValidMessage(field.value)) {
          showError(field, 'Mesajınız en az 10 karakter olmalıdır.');
          return false;
        }
      }

      return true;
    }

    function setButtonLoading(button, isLoading) {
      const btnText = button.querySelector('.btn-text');
      if (isLoading) {
        button.dataset.originalText = btnText.textContent;
        btnText.innerHTML = `
          <svg class="animate-spin inline-block mr-2" width="16" height="16" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Gönderiliyor...
        `;
        button.disabled = true;
      } else {
        btnText.textContent = button.dataset.originalText || 'Teklif İsteyin';
        button.disabled = false;
      }
    }

    // Gelişmiş Notification Sistemi
    function showNotification(type, title, text) {
      console.log('📢 Showing notification:', type, title, text);

      const oldNotif = document.getElementById('customNotification');
      if (oldNotif) oldNotif.remove();

      const notif = document.createElement('div');
      notif.id = 'customNotification';
      notif.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        min-width: 350px;
        max-width: 450px;
        background: white;
        border-radius: 12px;
        box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        z-index: 999999;
        animation: slideIn 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
        overflow: hidden;
      `;

      let bgColor = type === 'success' ? '#10b981' : type === 'error' ? '#ef4444' : '#3b82f6';
      let icon = type === 'success' ? '✓' : type === 'error' ? '✕' : 'ℹ';

      notif.innerHTML = `
        <style>
          @keyframes slideIn {
            from { transform: translateX(120%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
          }
          @keyframes slideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(120%); opacity: 0; }
          }
          @keyframes progressBar {
            from { width: 100%; }
            to { width: 0%; }
          }
          @media (max-width: 768px) {
            #customNotification {
              top: 10px !important;
              right: 10px !important;
              left: 10px !important;
              min-width: auto !important;
              max-width: none !important;
            }
          }
        </style>
        <div style="display: flex; align-items: flex-start; padding: 20px; gap: 15px;">
          <div style="
            width: 48px;
            height: 48px;
            border-radius: 50%;
            background: ${bgColor};
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            font-weight: bold;
            color: white;
            flex-shrink: 0;
          ">${icon}</div>
          <div style="flex: 1; padding-top: 4px;">
            <div style="
              font-size: 17px;
              font-weight: 700;
              color: #111827;
              margin-bottom: 6px;
            ">${title}</div>
            <div style="
              font-size: 14px;
              color: #6b7280;
              line-height: 1.5;
            ">${text}</div>
          </div>
          <button onclick="this.closest('#customNotification').remove()" style="
            background: transparent;
            border: none;
            color: #9ca3af;
            font-size: 28px;
            cursor: pointer;
            padding: 0;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            transition: all 0.2s;
            line-height: 1;
            margin-top: -4px;
          " onmouseover="this.style.background='#f3f4f6'; this.style.color='#374151';" onmouseout="this.style.background='transparent'; this.style.color='#9ca3af';">&times;</button>
        </div>
        <div style="height: 4px; background: #e5e7eb; position: relative; overflow: hidden;">
          <div style="
            height: 100%;
            background: ${bgColor};
            animation: progressBar 5s linear forwards;
          "></div>
        </div>
      `;

      document.body.appendChild(notif);
      console.log('✅ Notification added to DOM');

      setTimeout(() => {
        if (notif && notif.parentNode) {
          notif.style.animation = 'slideOut 0.3s ease forwards';
          setTimeout(() => notif.remove(), 300);
        }
      }, 5000);
    }

    // Form handling
    const contactForm = document.getElementById('contactForm');
    if (!contactForm) return;

    let isSubmitting = false;
    let lastSubmitTime = 0;
    const SUBMIT_COOLDOWN = 3000;

    // Real-time validation
    contactForm.addEventListener('blur', function(e) {
      if (e.target.matches('input, textarea, select')) {
        validateField(e.target);
      }
    }, true);

    contactForm.addEventListener('submit', async function(e) {
      e.preventDefault();

      const now = Date.now();
      if (now - lastSubmitTime < SUBMIT_COOLDOWN) {
        showNotification('error', 'Çok Hızlı!', 'Lütfen birkaç saniye bekleyip tekrar deneyin.');
        return;
      }

      if (isSubmitting) {
        return;
      }

      // Validate all fields
      let isValid = true;
      const fields = contactForm.querySelectorAll('input, textarea, select');
      fields.forEach(field => {
        if (field.name !== 'honeypot' && !validateField(field)) {
          isValid = false;
        }
      });

      if (!isValid) {
        showNotification('error', 'Form Hatası', 'Lütfen tüm zorunlu alanları doğru şekilde doldurun.');
        return;
      }

      // Check honeypot
      const honeypot = contactForm.querySelector('input[name="honeypot"]');
      if (honeypot && honeypot.value) {
        console.log('Bot detected via honeypot');
        showNotification('error', 'Hata', 'Form gönderilemedi. Lütfen sayfayı yenileyip tekrar deneyin.');
        return;
      }

      const submitBtn = contactForm.querySelector('.btn-submit');

      isSubmitting = true;
      lastSubmitTime = now;
      setButtonLoading(submitBtn, true);

      try {
        const formData = new FormData(contactForm);
        const data = {
          access_key: accessKey,
          name: formData.get('name'),
          email: formData.get('email'),
          phone: formData.get('phone') || 'Belirtilmedi',
          company: formData.get('company') || 'Belirtilmedi',
          product: formData.get('product') || 'Belirtilmedi',
          message: formData.get('message'),
          from_name: 'CihanPan Door Website',
          subject: 'Yeni İletişim Formu - CihanPan Door',
          replyto: formData.get('email')
        };

        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), 15000);

        const response = await fetch('https://api.web3forms.com/submit', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify(data),
          signal: controller.signal
        });

        clearTimeout(timeoutId);
        const result = await response.json();

        if (result.success) {
          showNotification('success', 'Başarıyla Gönderildi!', 'Mesajınız başarıyla alınmıştır. En kısa sürede size dönüş yapacağız.');
          contactForm.reset();
        } else {
          throw new Error(result.message || 'Form gönderilemedi');
        }
      } catch (error) {
        console.error('Form submission error:', error);

        let errorMessage = 'Bir hata oluştu. Lütfen tekrar deneyin.';

        if (error.name === 'AbortError') {
          errorMessage = 'İstek zaman aşımına uğradı. İnternet bağlantınızı kontrol edip tekrar deneyin.';
        } else if (error.message.includes('fetch') || error.message.includes('network')) {
          errorMessage = 'Bağlantı hatası. İnternet bağlantınızı kontrol edin.';
        }

        showNotification('error', 'Gönderim Başarısız', errorMessage + '\n\nAlternatif olarak telefon veya e-posta ile iletişime geçebilirsiniz.');
      } finally {
        isSubmitting = false;
        setButtonLoading(submitBtn, false);
      }
    });
  });
</script>
